diff --git a/mediagoblin/plugins/blog/__init__.py b/mediagoblin/plugins/blog/__init__.py
new file mode 100644
index 0000000..198a19a
--- /dev/null
+++ b/mediagoblin/plugins/blog/__init__.py
@@ -0,0 +1,44 @@
+# GNU MediaGoblin -- federated, autonomous media hosting
+# Copyright (C) 2011, 2012 MediaGoblin contributors.  See AUTHORS.
+#
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Affero General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Affero General Public License for more details.
+#
+# You should have received a copy of the GNU Affero General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+import os
+import logging
+
+from mediagoblin.tools import pluginapi
+
+_log = logging.getLogger(__name__)
+
+PLUGIN_DIR = os.path.dirname(__file__)
+
+
+def setup_plugin():
+    _log.info("Setting up Blogging plugin")
+    config = pluginapi.get_config('mediagoblin.plugins.blog')
+    pluginapi.register_template_path(os.path.join(PLUGIN_DIR, 'templates'))
+    routes = [
+        ('mediagoblin.plugins.blog.blogpost.edit',
+            '/u/<string:user>/b/post/edit/',
+            'mediagoblin.plugins.blog.views:edit_blog_post'),
+        ('mediagoblin.plugins.blog.blog.view',
+            '/u/<string:user>/b/blog-name/',
+            'mediagoblin.plugins.blog.views:view_blog')
+    ]
+
+    pluginapi.register_routes(routes)
+    pluginapi.register_template_path(os.path.join(PLUGIN_DIR, 'templates'))
+
+hooks = {
+    'setup': setup_plugin}
diff --git a/mediagoblin/plugins/blog/blog.egg-info/PKG-INFO b/mediagoblin/plugins/blog/blog.egg-info/PKG-INFO
new file mode 100644
index 0000000..312b2ba
--- /dev/null
+++ b/mediagoblin/plugins/blog/blog.egg-info/PKG-INFO
@@ -0,0 +1,10 @@
+Metadata-Version: 1.0
+Name: blog
+Version: 1.0
+Summary: UNKNOWN
+Home-page: UNKNOWN
+Author: UNKNOWN
+Author-email: UNKNOWN
+License: AGPLv3
+Description: UNKNOWN
+Platform: UNKNOWN
diff --git a/mediagoblin/plugins/blog/blog.egg-info/SOURCES.txt b/mediagoblin/plugins/blog/blog.egg-info/SOURCES.txt
new file mode 100644
index 0000000..4590fdb
--- /dev/null
+++ b/mediagoblin/plugins/blog/blog.egg-info/SOURCES.txt
@@ -0,0 +1,5 @@
+setup.py
+blog.egg-info/PKG-INFO
+blog.egg-info/SOURCES.txt
+blog.egg-info/dependency_links.txt
+blog.egg-info/top_level.txt
\ No newline at end of file
diff --git a/mediagoblin/plugins/blog/blog.egg-info/dependency_links.txt b/mediagoblin/plugins/blog/blog.egg-info/dependency_links.txt
new file mode 100644
index 0000000..8b13789
--- /dev/null
+++ b/mediagoblin/plugins/blog/blog.egg-info/dependency_links.txt
@@ -0,0 +1 @@
+
diff --git a/mediagoblin/plugins/blog/blog.egg-info/top_level.txt b/mediagoblin/plugins/blog/blog.egg-info/top_level.txt
new file mode 100644
index 0000000..8b13789
--- /dev/null
+++ b/mediagoblin/plugins/blog/blog.egg-info/top_level.txt
@@ -0,0 +1 @@
+
diff --git a/mediagoblin/plugins/blog/forms.py b/mediagoblin/plugins/blog/forms.py
new file mode 100644
index 0000000..ce6a25f
--- /dev/null
+++ b/mediagoblin/plugins/blog/forms.py
@@ -0,0 +1,27 @@
+import wtforms
+
+from mediagoblin.tools.text import tag_length_validator
+from mediagoblin.tools.translate import lazy_pass_to_ugettext as _
+from mediagoblin.tools.licenses import licenses_as_choices
+
+
+class BlogPostEditForm(wtforms.Form):
+    title = wtforms.TextField(
+        _('Title'),
+        [wtforms.validators.Length(min=0, max=500)])
+    
+    description = wtforms.TextAreaField(
+        _('Post'))
+    
+    tags = wtforms.TextField(
+        _('Tags'),
+        [tag_length_validator],
+        description=_(
+          "Separate tags by commas."))
+    
+    license = wtforms.SelectField(
+        _('License'),
+        [wtforms.validators.Optional(),],
+        choices=licenses_as_choices())
+    
+        
diff --git a/mediagoblin/plugins/blog/setup.py b/mediagoblin/plugins/blog/setup.py
new file mode 100644
index 0000000..bc9ae11
--- /dev/null
+++ b/mediagoblin/plugins/blog/setup.py
@@ -0,0 +1,10 @@
+from setuptools import setup, find_packages
+
+setup(
+    name='blog',
+    version='1.0',
+    packages=find_packages(),
+    include_package_data=True,
+    install_requires=[],
+    license='AGPLv3',
+    )
diff --git a/mediagoblin/plugins/blog/templates/blog/blog_view.html b/mediagoblin/plugins/blog/templates/blog/blog_view.html
new file mode 100644
index 0000000..8a76c8e
--- /dev/null
+++ b/mediagoblin/plugins/blog/templates/blog/blog_view.html
@@ -0,0 +1,34 @@
+{#
+# GNU MediaGoblin -- federated, autonomous media hosting
+# Copyright (C) 2011, 2012 MediaGoblin contributors.  See AUTHORS.
+#
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Affero General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Affero General Public License for more details.
+#
+# You should have received a copy of the GNU Affero General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#}
+{% extends "mediagoblin/base.html" %}
+
+{% import "/mediagoblin/utils/wtforms.html" as wtforms_util %}
+
+{% block title -%}
+  {% trans %}Create/Edit a blog post.{% endtrans %} &mdash; {{ super() }}
+{%- endblock %}
+
+{% block mediagoblin_content %}
+    <div> <h1> {{ blog_owner }} 's Blog </h1></div>
+    <div>
+        {% for post in blog_posts %}
+            <div> <h2> {{ post.title }} </h2> </div>
+            <div> <h3> {{ post.description }} </h3></div>
+        {% endfor %}
+    </div>
+{% endblock %}
diff --git a/mediagoblin/plugins/blog/templates/blog/blogpost_edit.html b/mediagoblin/plugins/blog/templates/blog/blogpost_edit.html
new file mode 100644
index 0000000..dec2082
--- /dev/null
+++ b/mediagoblin/plugins/blog/templates/blog/blogpost_edit.html
@@ -0,0 +1,38 @@
+{#
+# GNU MediaGoblin -- federated, autonomous media hosting
+# Copyright (C) 2011, 2012 MediaGoblin contributors.  See AUTHORS.
+#
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Affero General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Affero General Public License for more details.
+#
+# You should have received a copy of the GNU Affero General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#}
+{% extends "mediagoblin/base.html" %}
+
+{% import "/mediagoblin/utils/wtforms.html" as wtforms_util %}
+
+{% block title -%}
+  {% trans %}Create/Edit a blog post.{% endtrans %} &mdash; {{ super() }}
+{%- endblock %}
+
+{% block mediagoblin_content %}
+  <form action="{{ request.urlgen('mediagoblin.plugins.blog.blogpost.edit', user=user.username) }}"
+        method="POST">
+    <div class="form_box_xl">
+      <h1>{% trans %}Create a blog post.{% endtrans %}</h1>
+      {{ wtforms_util.render_divs(form) }}
+      <div class="form_submit_buttons">
+        {{ csrf_token }}
+      <input type="submit" name="status" value="Publish" class="button_form">
+      </div>
+    </div>
+  </form>
+{% endblock %}
diff --git a/mediagoblin/plugins/blog/views.py b/mediagoblin/plugins/blog/views.py
new file mode 100644
index 0000000..07e01cf
--- /dev/null
+++ b/mediagoblin/plugins/blog/views.py
@@ -0,0 +1,86 @@
+# GNU MediaGoblin -- federated, autonomous media hosting
+# Copyright (C) 2011, 2012 MediaGoblin contributors.  See AUTHORS.
+#
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Affero General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Affero General Public License for more details.
+#
+# You should have received a copy of the GNU Affero General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+
+import logging
+
+_log = logging.getLogger(__name__)
+
+
+from mediagoblin.tools.text import convert_to_tag_list_of_dicts
+from mediagoblin.tools.response import render_to_response, redirect
+from mediagoblin.decorators import require_active_login
+
+from mediagoblin.messages import add_message, SUCCESS
+
+from mediagoblin.plugins.blog import forms
+from mediagoblin.db.models import MediaEntry        
+from mediagoblin.db.models import User
+
+
+@require_active_login
+def edit_blog_post(request):
+    """
+    First view for submitting a file.
+    """
+    form = forms.BlogPostEditForm(request.form,
+        license=request.user.license_preference)
+    if request.method == 'POST' and form.validate():
+         
+            media_type = 'blogpost'
+            entry = request.db.MediaEntry()
+            entry.media_type = unicode(media_type)
+            entry.title = unicode(form.title.data)
+            entry.description = unicode(form.description.data)
+            entry.license = unicode(form.license.data) or None
+            entry.uploader = request.user.id
+
+            entry.tags = convert_to_tag_list_of_dicts(form.tags.data)
+
+            entry.generate_slug()
+            
+            entry.save()
+
+            add_message(request, SUCCESS, _('Woohoo! Submitted!'))
+
+            return redirect(request, "mediagoblin.plugins.blog.blog.view",
+                            user=request.user.username)
+
+    return render_to_response(
+        request,
+        'blog/blogpost_edit.html',
+        {'form': form,
+         'app_config': mg_globals.app_config,
+         'user': request.user})
+
+
+def view_blog(request):
+    blog_owner_username = request.matchdict.get('user')
+    _log.info("Username is %s"%(blog_owner_username))
+    owner_user = User.query.filter(User.username==blog_owner_username).one()
+    
+    all_blog_posts = MediaEntry.query.filter(
+        (MediaEntry.uploader==owner_user.id)
+        & (MediaEntry.media_type==u'blogpost'))
+    
+    return render_to_response(
+        request,
+        'blog/blog_view.html',
+        {'blog_posts': all_blog_posts,
+         'blog_owner': blog_owner_username,
+         'request': request,
+        })
+        
